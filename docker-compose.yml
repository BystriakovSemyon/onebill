version: '3.4'

services:
  onebill_postgres:
    image: ${DOCKER_REGISTRY_NAME}/onebill_postgres
    build:
      context: docker/postgres
      dockerfile: Dockerfile
    container_name: onebill_postgres
    restart: "unless-stopped"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    env_file: .env
    healthcheck:
      test: ["CMD", "pg_isready", "-h", "localhost", "-U", "$POSTGRES_USER", "-d", "$POSTGRES_DB"]
      retries: 20
      interval: 3s
      start_period: 5s

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.11.2
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 5s
      retries: 30
      start_period: 10s

  logstash:
    container_name: logstash
    image: docker.elastic.co/logstash/logstash:7.11.2
    restart: "unless-stopped"
    env_file: .env
    depends_on:
      - elasticsearch
    volumes:
      - ./docker/logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
      - ./docker/logstash/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9600"]
      interval: 10s
      retries: 30
      start_period: 20s

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:7.11.2
    restart: "unless-stopped"
    env_file: .env
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    healthcheck:
      test: ["CMD", "curl", "-s", "-f", "http://localhost:5601/"]
      interval: 5s
      retries: 30
      start_period: 20s

  apm_server:
    container_name: apm-server
    image: docker.elastic.co/apm/apm-server:7.11.2
    environment:
      - output.elasticsearch.hosts=['http://elasticsearch:9200']
      - apm-server.host="0.0.0.0:8200"
      - apm-server.secret_token="112"
      - setup.kibana.host="kibana:5601"
      - setup.template.enabled=true
      - logging.to_files=false
    depends_on:
      - elasticsearch

  onebill_db_migration:
    container_name: onebill-db-migration
    image: ${DOCKER_REGISTRY_NAME}/onebill-db-migration
    build:
      context: docker/onebill_db_migration/
      dockerfile: Dockerfile
      args:
        - GIT_USER=${GIT_USER}
        - GIT_PASSWORD=${GIT_PASSWORD}
    environment:
      - FLYWAY_OUT_OF_ORDER=true
      - BACKEND_ZONE=local
      - BACKEND_DB_DBNAME
      - BACKEND_DB_USER
      - BACKEND_DB_PASSWORD
      - BACKEND_DB_HOST
      - BACKEND_DB_PORT
      - CAP_ELK_APP_ID
      - CAP_ELK_API_HOSTS
    depends_on:
      - onebill_postgres
      - logstash

  onebill_menu_integrations:
    container_name: onebill_menu_integrations
    image: ${DOCKER_REGISTRY_NAME}/onebill_menu_integrations
    build:
      context: docker/onebill_menu_integrations/
      dockerfile: Dockerfile
    environment:
      - BACKEND_DB_HOST
      - BACKEND_DB_PORT
      - BACKEND_DB_DBNAME
      - BACKEND_DB_USER
      - BACKEND_DB_PASSWORD
      - CAP_ELK_APP_ID
      - CAP_ELK_API_HOSTS
    depends_on:
     - onebill_postgres
     - logstash

volumes:
  postgres-data:
  elasticsearch-data:
